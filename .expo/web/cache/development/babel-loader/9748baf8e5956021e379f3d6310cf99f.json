{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\cursos\\\\dankicode\\\\aplicativos\\\\projetos\\\\projeto_todo\\\\components\\\\TaskModal.js\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Checkbox from '@react-native-community/checkbox';\nimport ActionButton from \"./ActionButton\";\nexport default function TaskModal(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var showModal = function showModal() {\n    setModalVisible(true);\n  };\n\n  var hideModal = function hideModal() {\n    setModalVisible(false);\n  };\n\n  return React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert('Modal has been closed.');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, props.title), React.createElement(TextInput, {\n    placeholder: \"Digite a tarefa\",\n    defaultValue: props.item.descricao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 4,\n      flexDirection: \"row\",\n      height: 70,\n      borderColor: \"black\",\n      borderWidth: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, \"Urgente\"), React.createElement(Checkbox, {\n    value: props.item.urgente,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  })), React.createElement(ActionButton, {\n    onPress: function onPress() {\n      hideModal();\n    },\n    isButton: true,\n    icon: \"minus\",\n    title: \"Cancelar\",\n    style: styles.openButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  })))), React.createElement(ActionButton, {\n    onPress: function onPress() {\n      showModal();\n    },\n    isButton: true,\n    icon: \"plus-circle\",\n    title: \"Cadastrar nova tarefa\",\n    style: styles.openButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    width: \"90%\",\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: '#F194FF',\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    fontSize: 20,\n    fontWeight: \"600\",\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/victo/OneDrive/cursos/dankicode/aplicativos/projetos/projeto_todo/components/TaskModal.js"],"names":["React","useState","Checkbox","ActionButton","TaskModal","props","modalVisible","setModalVisible","showModal","hideModal","styles","centeredView","Alert","alert","modalView","modalText","title","item","descricao","flex","flexDirection","height","borderColor","borderWidth","urgente","openButton","StyleSheet","create","justifyContent","alignItems","marginTop","margin","width","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textStyle","color","fontWeight","textAlign","fontSize","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Alert, Modal, StyleSheet, Text, View, TextInput, SectionList } from 'react-native';\r\nimport Checkbox from '@react-native-community/checkbox'\r\nimport ActionButton from './ActionButton'\r\n\r\n\r\nexport default function TaskModal(props) {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n\r\n\r\n    const showModal = () => {\r\n        setModalVisible(true);\r\n    }\r\n    const hideModal = () => {\r\n        setModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.centeredView}>\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    Alert.alert('Modal has been closed.');\r\n                }}>\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.modalText}>{props.title}</Text>\r\n                        <TextInput placeholder=\"Digite a tarefa\" defaultValue={props.item.descricao}></TextInput>\r\n                        <View style={{flex:4, flexDirection:\"row\", height: 70, borderColor:\"black\", borderWidth:1 }}>\r\n                            <Text>Urgente</Text>\r\n                            <Checkbox value={props.item.urgente}></Checkbox>\r\n                        </View>\r\n\r\n\r\n                        {/*   <TouchableHighlight\r\n                            style={{ ...styles.openButton, backgroundColor: '#2196F3' }}\r\n                            onPress={() => {\r\n                                hideModal();\r\n                            }}>\r\n                            <Text style={styles.textStyle}>Hide Modal</Text>\r\n                        </TouchableHighlight> */}\r\n\r\n\r\n\r\n                        <ActionButton onPress={() => {\r\n                            hideModal();\r\n                        }} isButton={true} icon=\"minus\" title=\"Cancelar\" style={styles.openButton}></ActionButton>\r\n\r\n\r\n\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n\r\n            <ActionButton onPress={() => { showModal() }} isButton={true} icon=\"plus-circle\" title=\"Cadastrar nova tarefa\" style={styles.openButton}></ActionButton>\r\n\r\n            {/* <TouchableHighlight\r\n                style={styles.openButton}\r\n                onPress={() => {\r\n                    showModal();\r\n                }}>\r\n                <Text style={styles.textStyle}>Show Modal</Text>\r\n            </TouchableHighlight> */}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 22,\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        width: \"90%\",\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    openButton: {\r\n        backgroundColor: '#F194FF',\r\n        borderRadius: 20,\r\n        padding: 10,\r\n        elevation: 2,\r\n    },\r\n    textStyle: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    modalText: {\r\n        fontSize:20,\r\n        fontWeight: \"600\",\r\n        marginBottom: 15,\r\n        textAlign: 'center',\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}