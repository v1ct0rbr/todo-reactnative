{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\cursos\\\\dankicode\\\\aplicativos\\\\projetos\\\\projeto_todo\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { ImagePropTypes } from \"react-native-web/dist/index\";\nimport { useFonts, Lato_400Regular, Lato_900Black_Italic } from '@expo-google-fonts/lato';\nimport { AppLoading } from 'expo';\nimport ItemList from \"./components/ItemList\";\nimport MyModal from \"./components/TaskModal\";\nexport default function App() {\n  var _this = this;\n\n  var image = require(\"./resources/bg.jpg\");\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      tarefaAtual = _useState2[0],\n      setTarefaAtual = _useState2[1];\n\n  var _useState3 = useState([{\n    id: 1,\n    nome: \"minha tarefa1\",\n    urgente: false\n  }, {\n    id: 2,\n    nome: \"minha tarefa2\",\n    urgente: false\n  }, {\n    id: 3,\n    nome: \"minha tarefa3\",\n    urgente: true\n  }, {\n    id: 4,\n    nome: \"minha tarefa4\",\n    urgente: false\n  }, {\n    id: 10,\n    nome: \"minha tarefa5\",\n    urgente: true\n  }, {\n    id: 11,\n    nome: \"minha tarefa6\",\n    urgente: true\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tarefas = _useState4[0],\n      setTarefas = _useState4[1];\n\n  var _useFonts = useFonts({\n    Lato_400Regular: Lato_400Regular,\n    Lato_900Black_Italic: Lato_900Black_Italic\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var handleRemove = function handleRemove(id) {\n    var array = _toConsumableArray(tarefas);\n\n    var index = array.map(function (e) {\n      return e.id;\n    }).indexOf(id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      setTarefas(_toConsumableArray(array));\n    }\n  };\n\n  var handleEdit = function handleEdit(id) {\n    var tarefaTemp;\n    return _regeneratorRuntime.async(function handleEdit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tarefaTemp = tarefas.find(function (element, idx) {\n              return element.id == id;\n            });\n            setTarefaAtual(tarefaTemp);\n            console.log(tarefaAtual);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var findTarefaById = function findTarefaById(id) {\n    for (var i = 0; i < tarefas.length; i++) {\n      if (tarefas[i].id == id) {\n        setTarefaAtual(tarefas[i]);\n        break;\n      }\n    }\n  };\n\n  var handleRemove2 = function handleRemove2(id) {\n    var array = tarefas.filter(function (val, index) {\n      return val.id != id;\n    });\n    setTarefas(array);\n  };\n\n  return React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(ImageBackground, {\n    style: styles.image,\n    source: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.coverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Lista de Tarefas\"))), React.createElement(MyModal, {\n    item: tarefaAtual,\n    title: \"Cadastrar nova tarefa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), tarefas.map(function (tar, index) {\n    return React.createElement(ItemList, {\n      descricao: tar.nome,\n      handleEdit: handleEdit,\n      handleRemove: handleRemove2,\n      id: tar.id,\n      backgroundColor: tar.urgente == true ? \"#eac5c5\" : \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    });\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    width: \"100%\",\n    height: 100\n  },\n  coverview: {\n    width: \"100%\",\n    height: 100,\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    color: \"white\",\n    fontSize: 30,\n    fontWeight: \"800\",\n    fontFamily: \"Lato_400Regular\"\n  }\n});","map":{"version":3,"sources":["C:/Users/victo/OneDrive/cursos/dankicode/aplicativos/projetos/projeto_todo/App.js"],"names":["StatusBar","React","useState","ImagePropTypes","useFonts","Lato_400Regular","Lato_900Black_Italic","AppLoading","ItemList","MyModal","App","image","require","tarefaAtual","setTarefaAtual","id","nome","urgente","tarefas","setTarefas","fontsLoaded","handleRemove","array","index","map","e","indexOf","splice","handleEdit","tarefaTemp","find","element","idx","console","log","findTarefaById","i","length","handleRemove2","filter","val","flex","styles","coverview","title","tar","StyleSheet","create","container","backgroundColor","alignItems","justifyContent","width","height","color","fontSize","fontWeight","fontFamily"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;SAC8DC,c;AAC9D,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,oBAApC,QAAgE,yBAAhE;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,MAAMC,KAAK,GAAGC,OAAO,sBAArB;;AAF4B,kBAIUV,QAAQ,CAAC,EAAD,CAJlB;AAAA;AAAA,MAIrBW,WAJqB;AAAA,MAIRC,cAJQ;;AAAA,mBAKEZ,QAAQ,CAAC,CACrC;AAAEa,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GADqC,EAErC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAFqC,EAGrC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAHqC,EAIrC;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,eAAf;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAJqC,EAKrC;AAAEF,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,eAAhB;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GALqC,EAMrC;AAAEF,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,IAAI,EAAE,eAAhB;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GANqC,CAAD,CALV;AAAA;AAAA,MAKrBC,OALqB;AAAA,MAKZC,UALY;;AAAA,kBAgBRf,QAAQ,CAAC;AAC3BC,IAAAA,eAAe,EAAfA,eAD2B;AACVC,IAAAA,oBAAoB,EAApBA;AADU,GAAD,CAhBA;AAAA;AAAA,MAgBvBc,WAhBuB;;AAoB5B,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAID,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACN,EAAD,EAAQ;AAE3B,QAAIO,KAAK,sBAAOJ,OAAP,CAAT;;AACA,QAAIK,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAU,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACV,EAAT;AAAA,KAAV,EAAuBW,OAAvB,CAA+BX,EAA/B,CAAZ;;AAEA,QAAIQ,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,MAAAA,KAAK,CAACK,MAAN,CAAaJ,KAAb,EAAoB,CAApB;AACAJ,MAAAA,UAAU,oBAAKG,KAAL,EAAV;AACD;AACF,GATD;;AAUA,MAAMM,UAAU,GAAG,SAAbA,UAAa,CAAOb,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbc,YAAAA,UADa,GACAX,OAAO,CAACY,IAAR,CAAa,UAACC,OAAD,EAAUC,GAAV;AAAA,qBAAkBD,OAAO,CAAChB,EAAR,IAAcA,EAAhC;AAAA,aAAb,CADA;AAGjBD,YAAAA,cAAc,CAACe,UAAD,CAAd;AAEAI,YAAAA,OAAO,CAACC,GAAR,CAAYrB,WAAZ;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAQA,MAAMsB,cAAc,GAAG,SAAjBA,cAAiB,CAACpB,EAAD,EAAQ;AAC7B,SAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,OAAO,CAACmB,MAA5B,EAAoCD,CAAC,EAArC;AACE,UAAIlB,OAAO,CAACkB,CAAD,CAAP,CAAWrB,EAAX,IAAiBA,EAArB,EAAyB;AACvBD,QAAAA,cAAc,CAACI,OAAO,CAACkB,CAAD,CAAR,CAAd;AACA;AACD;AAJH;AAKD,GAND;;AASA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACvB,EAAD,EAAQ;AAE5B,QAAIO,KAAK,GAAGJ,OAAO,CAACqB,MAAR,CAAe,UAAUC,GAAV,EAAejB,KAAf,EAAsB;AAC/C,aAAOiB,GAAG,CAACzB,EAAJ,IAAUA,EAAjB;AACD,KAFW,CAAZ;AAIAI,IAAAA,UAAU,CAACG,KAAD,CAAV;AACD,GAPD;;AAeA,SACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEmB,MAAAA,IAAI,EAAE;AAAR,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEC,MAAM,CAAC/B,KAA/B;AAAsC,IAAA,MAAM,EAAEA,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE+B,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CAFF,EAQE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE/B,WAAf;AAA4B,IAAA,KAAK,EAAC,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUIK,OAAO,CAACM,GAAR,CAAY,UAACqB,GAAD,EAAMtB,KAAN;AAAA,WAAgB,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEsB,GAAG,CAAC7B,IAAzB;AAA+B,MAAA,UAAU,EAAEY,UAA3C;AAAuD,MAAA,YAAY,EAAEU,aAArE;AAAoF,MAAA,EAAE,EAAEO,GAAG,CAAC9B,EAA5F;AAC5B,MAAA,eAAe,EAAE8B,GAAG,CAAC5B,OAAJ,IAAe,IAAf,GAAsB,SAAtB,GAAkC,OADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AAAA,GAAZ,CAVJ,CADF;AAiBD;AAED,IAAMyB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTP,IAAAA,IAAI,EAAE,CADG;AAETQ,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BxC,EAAAA,KAAK,EAAE;AACLyC,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,MAAM,EAAE;AAFH,GAPwB;AAY/BV,EAAAA,SAAS,EAAE;AACTS,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,MAAM,EAAE,GAFC;AAGTJ,IAAAA,eAAe,EAAE,iBAHR;AAITE,IAAAA,cAAc,EAAE,QAJP;AAKTD,IAAAA,UAAU,EAAE;AALH,GAZoB;AAmB/BN,EAAAA,KAAK,EAAE;AACLU,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE,KAHP;AAILC,IAAAA,UAAU,EAAE;AAJP;AAnBwB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, ImageBackground, ScrollView, ImagePropTypes } from 'react-native';\nimport { useFonts, Lato_400Regular, Lato_900Black_Italic } from '@expo-google-fonts/lato'\nimport { AppLoading } from 'expo';\nimport ItemList from './components/ItemList';\nimport MyModal from './components/TaskModal'\n\nexport default function App() {\n\n  const image = require(\"./resources/bg.jpg\");\n\n  const [tarefaAtual, setTarefaAtual] = useState({});\n  const [tarefas, setTarefas] = useState([\n    { id: 1, nome: \"minha tarefa1\", urgente: false },\n    { id: 2, nome: \"minha tarefa2\", urgente: false },\n    { id: 3, nome: \"minha tarefa3\", urgente: true },\n    { id: 4, nome: \"minha tarefa4\", urgente: false },\n    { id: 10, nome: \"minha tarefa5\", urgente: true },\n    { id: 11, nome: \"minha tarefa6\", urgente: true }\n  ]);\n\n\n\n  let [fontsLoaded] = useFonts({\n    Lato_400Regular, Lato_900Black_Italic\n  })\n\n  if (!fontsLoaded) {\n    return <AppLoading />\n  }\n\n  // tarefas.sort((a, b) => (a[\"urgente\"] == false && b[\"urgente\"] == true));\n\n  const handleRemove = (id) => {\n\n    var array = [...tarefas]; // make a separate copy of the array\n    var index = array.map((e) => e.id).indexOf(id);\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      setTarefas([...array]);\n    }\n  }\n  const handleEdit = async (id) => {\n    let tarefaTemp = tarefas.find((element, idx) => element.id == id);\n\n    setTarefaAtual(tarefaTemp);\n    // await findTarefaById(id);\n    console.log(tarefaAtual);\n  }\n\n  const findTarefaById = (id) => {\n    for (var i = 0; i < tarefas.length; i++)\n      if (tarefas[i].id == id) {\n        setTarefaAtual(tarefas[i])\n        break;\n      }\n  }\n\n\n  const handleRemove2 = (id) => {\n\n    let array = tarefas.filter(function (val, index) {\n      return val.id != id;\n    })\n\n    setTarefas(array)\n  }\n\n\n\n  /*  const handleRemove = (id) => {\n     alert(`A tarefa ${id} foi excluída`)\n   } */\n\n  return (\n    <ScrollView style={{ flex: 1 }}>\n      <StatusBar translucent={true} />\n      <ImageBackground style={styles.image} source={image}>\n        <View style={styles.coverview}>\n          <Text style={styles.title}>Lista de Tarefas</Text>\n        </View>\n      </ImageBackground>\n\n      <MyModal item={tarefaAtual} title=\"Cadastrar nova tarefa\"></MyModal>\n\n      { tarefas.map((tar, index) => <ItemList descricao={tar.nome} handleEdit={handleEdit} handleRemove={handleRemove2} id={tar.id}\n        backgroundColor={tar.urgente == true ? \"#eac5c5\" : \"white\"}></ItemList>)\n      }\n\n    </ScrollView >\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    width: \"100%\",\n    height: 100,\n    // marginBottom: 15\n  },\n  coverview: {\n    width: \"100%\",\n    height: 100,\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  title: {\n    color: \"white\",\n    fontSize: 30,\n    fontWeight: \"800\",\n    fontFamily: \"Lato_400Regular\"\n  },\n\n});\n"]},"metadata":{},"sourceType":"module"}